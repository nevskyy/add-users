{"version":3,"sources":["components/Users/Users.jsx","API.js","components/Spinner/Spinner.jsx","components/Error/Error.jsx","components/PopUpMenu/PopUpMenu.jsx","components/MessageOnSubmit/MessageOnSubmit.jsx","App.jsx","index.js"],"names":["Users","users","className","map","user","i","src","picture","alt","title","firstName","lastName","id","BASE_URL","headers","getData","endPoint","method","page","fetch","then","response","ok","Error","status","json","data","Spinner","PopUpMenu","setShowPopUp","setUserDeployed","useEffect","document","body","style","overflow","useState","email","avatar","formData","setFormData","onSubmit","errorList","setErrorList","regExUrl","handleOnChange","event","target","name","value","handleOnBlur","errorName","length","includes","emailAddress","atSymbol","indexOf","dot","validateEmail","match","resetFormData","onClick","currentTarget","action","preventDefault","console","log","JSON","stringify","res","catch","err","postData","undefined","setTimeout","htmlFor","type","onChange","onBlur","borderColor","disabled","Object","values","MessageOnSubmit","userDeployed","App","setPage","setUsers","error","setError","showPopUp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.790750a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Users.scss';\r\n\r\nexport const Users = ({ users }) => {\r\n  return (\r\n    <>\r\n      <ul className='users'>\r\n        {users.map((user, i) => {\r\n          return (\r\n            <li className='users__user' key={user.id}>\r\n              <img\r\n                src={user.picture}\r\n                alt='user-img'\r\n                className='users__user__image'\r\n              />\r\n              <h5 className='users__user__title'>\r\n                {user.title} {user.firstName} {user.lastName}\r\n              </h5>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","const BASE_URL = 'https://dummyapi.io/data/v1/';\r\n\r\nconst headers = {\r\n  'app-id': '6154537832884b1a024b2f3c',\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const getData = (endPoint = 'user', method = 'GET', page=0) => {\r\n  return fetch(`${BASE_URL}${endPoint}?page=${page}&limit=15`, {\r\n    method,\r\n    headers,\r\n  })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw Error(response.status)\r\n      }\r\n      return (\r\n        response.json()\r\n      )\r\n    })\r\n    .then((data) => {\r\n      return data.data;\r\n    })\r\n};\r\n\r\nexport const postData = (endPoint='user/create', method = 'POST', data) => {\r\n  return fetch (`${BASE_URL}${endPoint}`, {\r\n    method,\r\n    headers,\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then(res => {\r\n      return res;\r\n    }).catch(err => err)\r\n}\r\n","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nexport const Spinner = () => {\r\n\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"spinner__content\"></div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './Error.scss';\r\n\r\nexport const Error = () => {\r\n\r\n  return (\r\n    <div className=\"error\">Page is under construction!</div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './PopUpMenu.scss';\r\nimport { postData } from '../../API';\r\n\r\nexport const PopUpMenu = ({ setShowPopUp, setUserDeployed }) => {\r\n  useEffect(() => {\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    return () => (document.body.style.overflow = 'unset');\r\n  }, []);\r\n\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    avatar: '',\r\n  });\r\n\r\n  const [errorList, setErrorList] = useState({\r\n    title: false,\r\n    firstName: false,\r\n    lastName: false,\r\n    email: false,\r\n    avatar: false,\r\n    onSubmit: false,\r\n  });\r\n\r\n  const regExUrl =\r\n    /^(ftp|http|https|chrome|:\\/\\/|\\.|@){2,}(localhost|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\S*:\\w*@)*([a-zA-Z]|(\\d{1,3}|\\.){7}){1,}(\\w|\\.{2,}|\\.[a-zA-Z]{2,3}|\\/|\\?|&|:\\d|@|=|\\/|\\(.*\\)|#|-|%)*$/gmu;\r\n\r\n  const validateEmail = (emailAddress) => {\r\n    let atSymbol = emailAddress.indexOf('@');\r\n    if (atSymbol < 1) return true;\r\n\r\n    let dot = emailAddress.indexOf('.');\r\n    if (dot <= atSymbol + 2) return true;\r\n\r\n    if (dot === emailAddress.length - 1) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    errorList[name] = false;\r\n\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleOnBlur = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    let errorName = false;\r\n\r\n    if (!value.length && !['title', 'avatar'].includes(name)) {\r\n      errorName = true;\r\n    } else if (name === 'email' && validateEmail(value)) {\r\n      errorName = true;\r\n    } else if (name === 'avatar' && !value.match(regExUrl) && value.length) {\r\n      errorName = true;\r\n    }\r\n\r\n    errorName && setErrorList({ ...errorList, [name]: true });\r\n  };\r\n\r\n  const resetFormData = () => {\r\n    setFormData({\r\n      title: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      avatar: '',\r\n    });\r\n\r\n    setErrorList({\r\n      title: false,\r\n      firstName: false,\r\n      lastName: false,\r\n      email: false,\r\n      avatar: false,\r\n    });\r\n\r\n    setShowPopUp(false);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(formData);\r\n    const response = postData(undefined, undefined, formData).then((data) => {\r\n      console.log(data, data.ok, typeof data.ok);\r\n      setUserDeployed(data.ok);\r\n    });\r\n\r\n    resetFormData();\r\n    setShowPopUp(false);\r\n\r\n    console.log(response);\r\n\r\n    setTimeout(() => {\r\n      setUserDeployed('');\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='popup-menu'\r\n      onClick={(event) =>\r\n        event.target === event.currentTarget && resetFormData()\r\n      }\r\n    >\r\n      <form action='submit' className='add-user-form' onSubmit={handleSubmit}>\r\n        <div className='add-user-form__wrapper'>\r\n          <label htmlFor='title' className='add-user-form__label'>\r\n            Title:\r\n          </label>\r\n          <select\r\n            type='text'\r\n            name='title'\r\n            className='add-user-form__input'\r\n            onChange={handleOnChange}\r\n            value={formData.title}\r\n            onBlur={handleOnBlur}\r\n          >\r\n            {['', 'mr', 'mrs', 'ms', 'miss', 'dr'].map((title) => {\r\n              return <option key={title}>{title}</option>;\r\n            })}\r\n          </select>\r\n\r\n          <h5 className='add-user-form__error'>\r\n            {errorList.title\r\n              ? 'Please enter title(mr, mrs, ms, miss, dr) or leave field empty'\r\n              : ''}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className='add-user-form__wrapper'>\r\n          <label htmlFor='firstName' className='add-user-form__label'>\r\n            First Name*:\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='firstName'\r\n            className='add-user-form__input'\r\n            onChange={handleOnChange}\r\n            value={formData.firstName}\r\n            onBlur={handleOnBlur}\r\n            style={\r\n              errorList.firstName\r\n                ? { borderColor: 'red' }\r\n                : { borderColor: 'grey' }\r\n            }\r\n          />\r\n          <h5 className='add-user-form__error'>\r\n            {errorList.firstName ? 'You should enter the first name' : ''}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className='add-user-form__wrapper'>\r\n          <label htmlFor='lastName' className='add-user-form__label'>\r\n            Last Name*:\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='lastName'\r\n            className='add-user-form__input'\r\n            onChange={handleOnChange}\r\n            value={formData.lastName}\r\n            onBlur={handleOnBlur}\r\n            style={\r\n              errorList.lastName\r\n                ? { borderColor: 'red' }\r\n                : { borderColor: 'grey' }\r\n            }\r\n          />\r\n          <h5 className='add-user-form__error'>\r\n            {errorList.lastName ? 'You should enter the last name' : ''}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className='add-user-form__wrapper'>\r\n          <label htmlFor='email' className='add-user-form__label'>\r\n            E-mail*:\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='email'\r\n            className='add-user-form__input'\r\n            onChange={handleOnChange}\r\n            value={formData.email}\r\n            onBlur={handleOnBlur}\r\n            style={\r\n              errorList.email ? { borderColor: 'red' } : { borderColor: 'grey' }\r\n            }\r\n          />\r\n          <h5 className='add-user-form__error'>\r\n            {errorList.email ? 'You should enter correct email' : ''}\r\n          </h5>\r\n        </div>\r\n\r\n        <div className='add-user-form__wrapper'>\r\n          <label htmlFor='avatar' className='add-user-form__label'>\r\n            Avatar:\r\n          </label>\r\n          <input\r\n            type='text'\r\n            name='avatar'\r\n            className='add-user-form__input'\r\n            onChange={handleOnChange}\r\n            value={formData.avatar}\r\n            onBlur={handleOnBlur}\r\n            style={\r\n              errorList.avatar\r\n                ? { borderColor: 'red' }\r\n                : { borderColor: 'grey' }\r\n            }\r\n          />\r\n          <h5 className='add-user-form__error'>\r\n            {errorList.avatar ? 'Enter correct url or leave fiel empty' : ''}\r\n          </h5>\r\n        </div>\r\n        <h6 className='add-user-form__mandatory-fields'>*Mandatory fields</h6>\r\n\r\n        <button\r\n          className={'add-user-form__button'}\r\n          disabled={\r\n            !formData.firstName ||\r\n            !formData.lastName ||\r\n            !formData.email ||\r\n            Object.values(errorList).includes(true)\r\n          }\r\n        >\r\n          Add User\r\n        </button>\r\n        <button className='add-user-form__close-button' onClick={resetFormData}>\r\n          &#x2715;\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './MessageOnSubmit.scss';\r\n\r\nexport const MessageOnSubmit = ({ userDeployed }) => {\r\n  if (userDeployed === '') {\r\n    return '';\r\n  } else if (userDeployed) {\r\n    return <div className='user-deployed'>User well deployed on server !!!</div>;\r\n  } else {\r\n    return <div className='user-deployed user-deployed__error'>Server Responce Error, please try again later</div>;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { Users } from './components/Users';\nimport { getData } from './API';\nimport { Spinner } from './components/Spinner';\nimport { Error } from './components/Error';\nimport { PopUpMenu } from './components/PopUpMenu';\nimport { MessageOnSubmit } from './components/MessageOnSubmit';\n\nfunction App() {\n  const [page, setPage] = useState(0);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(false);\n  const [showPopUp, setShowPopUp] = useState(false);\n  const [userDeployed, setUserDeployed] = useState('');\n\n  useEffect(() => {\n    getData()\n      .then((data) => setUsers(data))\n      .catch((error) => setError(true));\n  }, []);\n\n  useEffect(() => {\n    getData(undefined, undefined, page).then((data) => {\n      setUsers([...users, ...data]);\n    });\n  }, [page]);\n\n  return (\n    <div className='App'>\n      <header className='header'>\n        <div className='controll-buttons'>\n          <button\n            className='controll-buttons__button controll-buttons__button--load-user'\n            onClick={() => setPage(page + 1)}\n            name='controll-buttons__load-user'\n          >\n            Load more users\n          </button>\n          <button\n            className='controll-buttons__button controll-buttons__button--add-user'\n            onClick={() => setShowPopUp(true)}\n            disabled={showPopUp}\n          >\n            Add user\n          </button>\n        </div>\n      </header>\n\n      <main className='main'>\n        {showPopUp && (\n          <PopUpMenu\n            setShowPopUp={setShowPopUp}\n            setUserDeployed={setUserDeployed}\n          />\n        )}\n\n        {!users.length && !error && <Spinner />}\n        {!!users.length && <Users users={users} />}\n        {error && <Error />}\n        <MessageOnSubmit userDeployed={userDeployed} />\n      </main>\n\n      {/* <footer className='footer'>contact details</footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}